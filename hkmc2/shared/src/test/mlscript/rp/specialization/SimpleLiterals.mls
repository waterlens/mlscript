:js

pattern Zero = "0"
pattern One = "1"
pattern Two = "2"

:ucs normalized
:fixme
fun checkZeroOneTwo(x) = if x is
  @compile Zero then 0
  @compile One then 1
  @compile Two then 2
  else ()
//│ ╔══[ERROR] Unrecognized pattern split.
//│ ║  l.10: 	  @compile Zero then 0
//│ ╙──      	   ^^^^^^^^^^^^^^^^^^^
//│ ╔══[ERROR] Unrecognized pattern split.
//│ ║  l.11: 	  @compile One then 1
//│ ╙──      	   ^^^^^^^^^^^^^^^^^^
//│ ╔══[ERROR] Unrecognized pattern split.
//│ ║  l.12: 	  @compile Two then 2
//│ ╙──      	   ^^^^^^^^^^^^^^^^^^
//│ Normalized:
//│ >  if then <error>

import "../../../mlscript-compile/Option.mls"
open Option

:ucs normalized
fun checkSomeZeroOneTwo(x) = if x is
  Some(@compile Zero) then 0
  Some(@compile One) then 1
  Some(@compile Two) then 2
  else ()
//│ Normalized:
//│ >  if
//│ >    x is Some($param0) and
//│ >      $param0 is "0" then 0
//│ >      $param0 is "1" then 1
//│ >      $param0 is "2" then 2
//│ >      else null
//│ >    else null

pattern ManyZero = ("0" ~ (ManyZero | "")) | ""

let res = "1" is @compile ManyZero
//│ res = false

