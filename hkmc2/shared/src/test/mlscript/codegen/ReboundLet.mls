:js


fun foo() =
  let x = 1
  let f = () => x
  fun g() = x
  let x = 2
  f()
  g()

foo()
//│ = 1


let x = 1
let f = () => x
//│ f = [function f]
//│ x = 1

f()
//│ = 1

let x = 2
//│ x = 2

f()
//│ = 1


// * Notice that we pick a different private field name for each `x`

object Foo with
  let x = 1
  let f = () => x
  fun g() = x
  print(f())
  let x = 2
  print(x)
  print(f())
  print(g())
//│ > 1
//│ > 2
//│ > 1
//│ > 1


