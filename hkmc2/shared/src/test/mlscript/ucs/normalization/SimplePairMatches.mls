:js


class Pair(a, b)
class A
class B


:sjs
x => if x is Pair(A, B) then 1
//│ JS (unsanitized):
//│ (x) => {
//│   let param0, param1;
//│   if (x instanceof Pair1.class) {
//│     param0 = x.a;
//│     param1 = x.b;
//│     if (param0 instanceof A1) {
//│       if (param1 instanceof B1) {
//│         return 1
//│       } else {
//│         throw new this.Error("match error");
//│       }
//│     } else {
//│       throw new this.Error("match error");
//│     }
//│   } else {
//│     throw new this.Error("match error");
//│   }
//│ }
//│ = [function block$res2]


// :e // FIXME: should be an exhaustiveness error
:sjs
fun f(x) = if x is
  Pair(A, A) then 1
  Pair(B, B) then 2
//│ JS (unsanitized):
//│ let f;
//│ f = function f(x) {
//│   let param0, param1;
//│   if (x instanceof Pair1.class) {
//│     param0 = x.a;
//│     param1 = x.b;
//│     if (param0 instanceof A1) {
//│       if (param1 instanceof A1) {
//│         return 1
//│       } else {
//│         throw new globalThis.Error("match error");
//│       }
//│     } else {
//│       if (param0 instanceof B1) {
//│         if (param1 instanceof B1) {
//│           return 2
//│         } else {
//│           throw new globalThis.Error("match error");
//│         }
//│       } else {
//│         throw new globalThis.Error("match error");
//│       }
//│     }
//│   } else {
//│     throw new globalThis.Error("match error");
//│   }
//│ };
//│ null


