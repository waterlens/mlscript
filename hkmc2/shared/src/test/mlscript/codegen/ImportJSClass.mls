:js



import "../../js/MyClass.mjs"
//│ MyClass = class MyClass {  constructor(name) {    this.name = name;  }  greet() {    console.log(`Hello from ${this.name}!`);  }}

MyClass
//│ = class MyClass {  constructor(name) {    this.name = name;  }  greet() {    console.log(`Hello from ${this.name}!`);  }}

new MyClass("Bob")
//│ = [object Object]

:todo
let C = MyClass
//│ ╔══[ERROR] Unsupported let binding shape
//│ ║  l.15: 	let C = MyClass
//│ ╙──      	    ^^^^^^^^^^^

let c = MyClass
//│ c = class MyClass {  constructor(name) {    this.name = name;  }  greet() {    console.log(`Hello from ${this.name}!`);  }}

:todo
new c("Bob")
//│ = [object Object]

globalThis.MyClass
//│ = class MyClass {  constructor(name) {    this.name = name;  }  greet() {    console.log(`Hello from ${this.name}!`);  }}


:ge
fun foo() =
  import "../../js/MyClass.mjs"
  ()
//│ ╔══[COMPILATION ERROR] Imports must be at the top level
//│ ║  l.33: 	  import "../../js/MyClass.mjs"
//│ ╙──      	         ^^^^^^^^^^^^^^^^^^^^^^


