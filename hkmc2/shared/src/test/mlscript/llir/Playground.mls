:js


:llir
fun f1() =
  let x = 1
  let x = 2
  x
//│ 
//│   def f1() =
//│     let x$0 = 1 in
//│     let x$1 = 2 in
//│     x$1
//│   undefined

:slot
:llir
fun f2() =
  let x = 0
  if x == 1 then 2 else 3
//│ Pretty Lowered:
//│   define fun f2() { set x = 0 in set scrut = ==(x, 1) in match scrut true => return 2 else return 3 } in return null
//│ 
//│   def f2() =
//│     let x$0 = 0 in
//│     let x$1 = ==(x$0,1) in
//│     case x$1 of
//│       BoolLit(true) =>
//│         2
//│       _ =>
//│         3
//│   def j$0() =
//│     null
//│   undefined

:llir
:slot
fun f3() =
  let x1 = 0
  let x2 = 1
  if true then x1 else x2
//│ Pretty Lowered:
//│  
//│ define fun f3() {
//│   set x1 = 0 in
//│   set x2 = 1 in
//│   set scrut = true in
//│   match scrut
//│     true =>
//│       return x1
//│     else
//│       return x2
//│ } in
//│ return null
//│ 
//│   def f3() =
//│     let x$0 = 0 in
//│     let x$1 = 1 in
//│     let x$2 = true in
//│     case x$2 of
//│       BoolLit(true) =>
//│         x$0
//│       _ =>
//│         x$1
//│   def j$0() =
//│     null
//│   undefined


:slot
:llir
fun f4() =
  let x = 0
  let x = if x == 1 then 2 else 3
  x
//│ Pretty Lowered:
//│  
//│ define fun f4() {
//│   set x = 0 in
//│   begin
//│     set scrut = ==(x, 1) in
//│     match scrut
//│       true =>
//│         set tmp = 2 in
//│         end
//│       else
//│         set tmp = 3 in
//│         end;
//│     set x1 = tmp in
//│     return x1
//│ } in
//│ return null
//│ 
//│   def f4() =
//│     let x$0 = 0 in
//│     let x$1 = ==(x$0,1) in
//│     case x$1 of
//│       BoolLit(true) =>
//│         let x$3 = 2 in
//│         jump j$0(x$3)
//│       _ =>
//│         let x$4 = 3 in
//│         jump j$0(x$4)
//│   def j$0(x$2) =
//│     x$2
//│   undefined

:slot
:llir
fun f5() =
  let x = 0
  let x = if x == 1 then 2 else 3
  let x = if x == 2 then 4 else 5
  x
//│ Pretty Lowered:
//│  
//│ define fun f5() {
//│   set x = 0 in
//│   begin
//│     set scrut = ==(x, 1) in
//│     match scrut
//│       true =>
//│         set tmp = 2 in
//│         end
//│       else
//│         set tmp = 3 in
//│         end;
//│     set x1 = tmp in
//│     begin
//│       set scrut1 = ==(x1, 2) in
//│       match scrut1
//│         true =>
//│           set tmp1 = 4 in
//│           end
//│         else
//│           set tmp1 = 5 in
//│           end;
//│       set x2 = tmp1 in
//│       return x2
//│ } in
//│ return null
//│ 
//│   def f5() =
//│     let x$0 = 0 in
//│     let x$1 = ==(x$0,1) in
//│     case x$1 of
//│       BoolLit(true) =>
//│         let x$3 = 2 in
//│         jump j$0(x$3)
//│       _ =>
//│         let x$4 = 3 in
//│         jump j$0(x$4)
//│   def j$0(x$2) =
//│     let x$5 = ==(x$2,2) in
//│     case x$5 of
//│       BoolLit(true) =>
//│         let x$7 = 4 in
//│         jump j$1(x$7)
//│       _ =>
//│         let x$8 = 5 in
//│         jump j$1(x$8)
//│   def j$1(x$6) =
//│     x$6
//│   undefined
