:js

:import PredefJS.mls
//│ Imported 2 member(s)


object Example with
  val a = 1
  fun f(x) = [x, a]

Example.f(2)
//│ = [2, 1]

let oops = Example.f
//│ oops = [function f]


// * JavaScript nonsense
:re
oops(2)
//│ ═══[RUNTIME ERROR] TypeError: Cannot read properties of undefined (reading 'a')

oops.call(Example, 2)
//│ = [2, 1]


// * We could use that syntax as a shorthand:
// * TODO need to support varargs...
fun (.) call(receiver, f)(arg) = f.call(receiver, arg)


// * Notice how it parses with the correct precedence:
:pt
:sjs
Example . oops(2)
//│ Parsed tree:
//│ App:
//│   lhs = App:
//│     lhs = Ident of "."
//│     rhs = Tup of Ls of 
//│       Ident of "Example"
//│       Ident of "oops"
//│   rhs = Tup of Ls of 
//│     IntLit of 2
//│ JS (unsanitized):
//│ let tmp1; tmp1 = call(Example1, oops); tmp1(2) ?? null
//│ = [2, 1]

Example. oops(2)
//│ = [2, 1]

// * This one is a normal method call; there is no `oops` in `Example`
:e
:re
Example .oops(2)
//│ ╔══[ERROR] Object 'Example' does not contain member 'oops'
//│ ║  l.55: 	Example .oops(2)
//│ ╙──      	        ^^^^^
//│ ═══[RUNTIME ERROR] TypeError: Example1.oops is not a function


id(Example) . oops(2)
//│ = [2, 1]


class Example2(val a) with
  val a = 1
  fun f(inc) = Example2(a + inc)

let oops2 = Example2(0).f
//│ oops2 = [function f]

Example2(1) . oops2(2) . oops2(2)
//│ = Example2(1)

Example2(1). oops2(2). oops2(2)
//│ = Example2(1)

(new Example2(1)) . oops2(2)
//│ = Example2(1)

:todo
new Example2(1)
  . oops2(2)
//│ ═══[RUNTIME ERROR] TypeError: Cannot read properties of undefined (reading 'a')

:todo
new Example2(1)
  . oops2(2)
  . oops2(2)
//│ ═══[RUNTIME ERROR] TypeError: Cannot read properties of undefined (reading 'a')


// * Alternative syntax – precedence is now inappropriate
fun (.>) call(receiver, f)(arg) = f.call(receiver, arg)

:pt
:sjs
:re
Example .> oops(2)
//│ Parsed tree:
//│ App:
//│   lhs = Ident of ".>"
//│   rhs = Tup of Ls of 
//│     Ident of "Example"
//│     App:
//│       lhs = Ident of "oops"
//│       rhs = Tup of Ls of 
//│         IntLit of 2
//│ JS (unsanitized):
//│ let tmp25; tmp25 = oops(2) ?? null; call1(Example1, tmp25)
//│ ═══[RUNTIME ERROR] TypeError: Cannot read properties of undefined (reading 'a')

// * Note:
:re
oops(2)
//│ ═══[RUNTIME ERROR] TypeError: Cannot read properties of undefined (reading 'a')

// * Note:
(Example .> oops)(2)
//│ = [2, 1]


// * Another alternative syntax – currently adopted in Predef
fun (|>.) call(receiver, f)(arg) = f.call(receiver, arg)

Example |>. oops(2)
//│ = [2, 1]

Example2(1) |>. oops2(2) |>. oops2(2)
//│ = Example2(1)

:fixme
(Example2(1)
  |>. oops2(2)
  |>. oops2(2)
).a
//│ ═══[RUNTIME ERROR] TypeError: Cannot read properties of undefined (reading 'a')


